namespace Dao.Migrations
{
    using Dao.DataGeneration;
    using Dao.Model;
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Migrations;
    using System.Linq;

    public sealed class Configuration : DbMigrationsConfiguration<Dao.WriterContext>
    {
        public Configuration()
        {
            AutomaticMigrationsEnabled = false;

            ContextKey = "Dao.WriterContext";
        }

        protected override void Seed(WriterContext context)
        {
            //  This method will be called after migrating to the latest version.
            var admin = GenerateData.GenerateAdmin();
            context.Users.AddOrUpdate(x => x.Name, admin);

            context.SaveChanges();

            //admin = context.Users.Single(x => x.Name == admin.Name);

            //var stateTypes = GenerateData.GenerateStateTypes();
            //stateTypes.ForEach(x => x.Owner = admin);
            //context.StateTypes.AddOrUpdate(x => x.Name, stateTypes.ToArray());

            var genres = GenerateData.GenerateGenres();
            context.Genres.AddOrUpdate(x => x.Name, genres.ToArray());

            var tags = GenerateData.GenerateTags();
            context.Tags.AddOrUpdate(x => x.Name, tags.ToArray());

            context.SaveChanges();

            //var book = GenerateData.BookRat();
            //book.Owner = admin;
            ////var tower = GenerateData.BookTower(stateTypes);
            //context.Books.AddOrUpdate(x => x.Name, book);


            var article = new Article {
                DateCreate = DateTime.Now,
                Name = "Основные понятия и типы Интерактивной книги",
                ShortDesc = "Идея возможности выбора читателем развития сюжета выглядит простой, однако за этой простотой скрыто множество сложных структур. Предлагаем рассмотреть некоторые типовые решения и их особенности",
                Desc = @"Идея возможности выбора читателем развития сюжета выглядит простой, однако за этой простотой скрыто множество сложных структур. Предлагаем рассмотреть некоторые типовые решения и их особенности.
<h4>Произведения прямого повествования</h4>
Ложные выборы vs ветвление
В произведениях с прямым повествованием у каждой главы может быть от одного до нескольких потомков. Одним из крайних случаев подобной структуры является дерево глав, где у каждой главы есть два потомка.
<img src='/Content/defenitionExample/01.png' />
Давайте на этом примере введём важную цифру, а именно процент пропущенных глав. Читатель, какой бы путь он не выбрал, прочитает лишь 4 главы, в то время как автору пришлось прописать 15 главы. Иными словами почти 75% глав были пропущены. С увеличением количества выборов предоставляемых читателю данное число растёт по экспоненте. Для решения этой проблемы используются ложные выборы. Автор, даёт на выбор одну или несколько глав, результат которых, так или иначе, приходит в одну точку (главу). Это позволяет избегать излишнего ветвления, снижает процент пропущенных глав, при этом оставляя читателю ощущение постоянного участия в событиях.
Здесь хотелось бы остановиться на очевидном, но, тем не менее, важном замечании. Ложное ветвление лишь инструмент, как и любой другой инструмент, он может испортить произведение при неумелом обращении. Если читатель почувствует, что от его решений ничего не зависит, это серьёзно испортит его впечатления от произведения. Потому старайтесь не злоупотреблять ложными выборами, до тех пор, пока вы не сможете мастерски маскировать от читателя, какой из выборов ложный, а какой определит всю дальнейшую судьбу произведения.
<img src='/Content/defenitionExample/02.png' />
На рисунке вы можете видеть схему произведения, комбинирующая ложные выборы и ветвление. Как и в первом примере, здесь читателю будут предоставлены до 4 выборов. При этом процент пропущенных глав снижен с 75% до 35%. Из 11 глав читатель увидит 6-7. Что не менее важно, при комбинировании ветвления и ложного выбора с ростом произведения процент пропущенных глав остаётся в пределах 20-40 процентов.
<h4>Решения</h4>
Следующий инструмент, который предоставляет наш портал, является Решения. Способов применения много, но в первую очередь я бы хотел остановиться на двух базовых: Отложенный выбор и Накопление решений.
<h4>Отложенный выбор</h4>
Используя отложенный выбор вы можете, например, дать возможность читателю в начале произведения выбрать, что собираясь утром, положит в нагрудный карман ваш герой: перочинный нож или наручные часы, напоминающие о любимой. А затем вернуться к этому выбору лишь в конце произведения, в самый напряжённый момент, направив концовку либо в сторону кровавой расправы в случае если был выбран нож, либо в сторону мирного решения если были выбраны часы.
<img src='/Content/defenitionExample/03.jpg' />
Механика использование данного инструмента, следующая. Вы можете добавлять любые Решения на входе в главу. Так на схеме при входе в главу «Глава 2.1» читателю в графу Решения будет добавлен «Нож», а при прочтении Главы 2.2 в Решениях будет запись «Часы». Это можно сделать как в скрытом режиме так и в явном. Разница лишь в том, что во втором случае, на протяжении всего произведения, читатель будет видеть, что он носит с собой Нож/Часы любимой, а в первом случае, данная информация будет доступна лишь системе для вычисления пути.
А далее можно наложить условия для входа в главу. Так, несмотря на то что у произведения три концовки, любой читатель будет видеть лишь два варианта:
1) Кровавая и нейтральная если в Решениях есть запись о Ноже
2) Нейтральная и Мирная в случае если Решения хранит запись о Часах
<h4>Накопление решений</h4>
И вот мы подходим к самому сложному и важному инструменту, который позволяет создавать качественно иные произведения. Если коротко то решения в ложных выборах должны суммироваться давая множественный выбор концовок при минимальном ветвлении.
Рассмотрим в качестве примера следующую структуру любовного произведения
Глава 1. Наш главный Герой рассказывает, что он накопил 200 рублей. Это тут же вносится в качестве видимого читателю Решения. После чего Герой планирует поход в кино где собирается встретиться с девушкой, которой хочет предложить встречаться после сеанса. По пути он встречает бездомного, который просит у него денег на еду. Герою стыдно, что он ни разу не подавал бездомному, но с другой стороны он волнуется, что ему может не хватить денег на кино. Выбор, отдать половину денег бездомному или пройти мимо.
Если читатель выбрал первый вариант и подал денег, это тут же будет отображено в его решениях. Теперь он видит что у него осталось 100 рублей.
Таким образом Глава 2 хоть и является ложным выбором, так как в любом случае сюжет придёт к Главе 3, данное решение будет влиять на концовку.
<img src='/Content/defenitionExample/04.jpg' />
В главе 4, перед читателем опять выбор, потратить деньги и поступить честно или схитрить. Что опять таки выглядит как Ложный выбор, однако это не так. Ведь в 5 Главе варианты будут зависеть от того сколько рублей осталось у героя. При этом не будет иметь значения каким именно образом герой потратил деньги. Таким образом мы превратили 2 ложных выбора в последовательные Решения которые накапливаются. Так концовка 1 доступна лишь в случае если читатель не тратил деньги вовсе, или если он лишь купил жетон. Концовка 2 доступна лишь в случае если читатель сделал что-то одно либо купил жетон, либо дал денег бездомному. Концовка 3 доступна лишь тем кто каждый раз отдавал всё что мог. 
<h4>Произведения с циклическими структурами</h4>
Вот мы и добрались до одной из самой сложных структуры стоящей на грани книги и игры. Многое из того что вы прочитаете дальше будет вызывать у вас ассоциации с комьютерными играми. Это не случайно, ведь там данные структуры расцвели в полной красе. НО! Всегда следует помнить, что ваше произведение в первую очередь книга, в которой есть элементы из других направлений, а не игра в которой много текста.
<h4>Звезда</h4>
И так, пожалуй начнём с простейшего, я бы даже сказал классического примера звезды в произведении.
Глава 1. Введение знакомит нас с героем, миром и обстановкой.
Глава 2. Ставит нас перед выбором. У нас есть ресурс, в данном случае: время. Мы доступно 3 варианта, но времени хватит лишь на 2 действия. По большому счёту это выбор, что из трёх действий проигнорировать. Но так будут думать меньшая часть читателей. Большинство из них, будут размышлять над каждым выбором.
Главы 2.1 &ndash; 2.3 по сути своей атомарны, они ни как не связаны ни с друг другом, ни с предыдущими решениями. Каждая из них может быть не одной главой, а целой цепочкой приключений, но для простоты понимания общей структуры, пока будем считать их коротки зарисовками.
Глава 3. Повествует о том как Герой в последний миг покидает замок, чуть не замеченный стражей в первых лучах солнца.
Глава 4. Подводит нас к развязке.
<img src='/Content/defenitionExample/05.png' />
Для читателя выбора концовки не будет. Из трёх доступных вариантов, ему будет видна всегда лишь одна. Какую именно показать система узнает по тем Решениям с которыми придёт сюда читатель.
Теперь вернёмся к ведённой ранее цифре: проценту пропущенных глав. В этом произведении 10 глав. Каким бы путём не пошёл читатель он пропустит лишь 3 из этих 10 глав. 2 пропущенные главы это концовки и 1 глава это не совершённое действие. Таким образом процент пропущенных глав всего 30%. Но при этом в нашем произведение фактически друг с другом соседствуют 3 истории. Об добром герои который спас всех кого мог, был предан принцессой, но поддержан друзьями. Об корыстном подонке который предпочёл бросить своих людей на верную смерть, лишь бы по лучше устроить собственную жизнь. И о герое который поставил своё дело выше личных предпочтений, пошёл по головам, пожертвовал той кого любил, однако заполучил людей и средства для благородной цели свержения злодея из замка.
Произведения такого рода зачастую перечитываются из-за желания узнать ответ на вопрос 'а что если?'. Потому гениальное интерактивное произведение это то, которое сочетает в себе два весьма противоречивых требования. С одной стороны, какой бы путь не выбрал читатель, история должна быть законченной, не должно быть сюжетных хвостов с вопросами которые были подняты но ответы на которые можно было найти лишь выбрав иной путь. С другой сторону, каждое перепрочтение, с выбором иного пути, должно расширять для читателя понимание описанных событий.
Например, в главе 2.1, при описание сокровищ, мы можем ввести воспоминания героя о том как будучи ребёнком он удивлялся почему взрослые так много тратят сил ради красивых камешков, вместо того что бы собрать по больше еды и накормить каждого. Заложив это зерно мы можем собрать разные побеги в Концовках. Если читатель выбрать главу 2.1 значит в итоге он попадёт либо во 2 либо в 3 концовку. Тогда в Концовке 2, мы можем вложить нашему герою следующее продолжение его мысли начатой в сокровищнице: 'Теперь я вырос и понял, то то что я в детстве пренебрежительно называл камешками на самом деле ключ в чудесный мир прекрасных дам. Одна из которых теперь моя жена'. А вот в Концовке 3, мы можем сакцентировать внимание на другой стороне вопроса камней. 'Изменилось ли моё отношение к побрякушкам над которыми столько трясутся богатеи с тех пор как я был неразумным юнцов? Конечно! Теперь я знаю, подобные атрибуты словно кирпичики складывают фундамент власти. Вытащи из под них эту блестяшку и вся конструкция затрещит.
Узнав обе эти истории, читатель будет лучше понимать какие мысли натолкнули Героя отправится в замок. Он поймёт что наш Герой до последнего момента, даже уже будучи в замке, сомневался как поступить. Для читатель вдруг станет понятно, зачем наш герой постоянно подкидывал монетку. Он искал возможности переложить столь сложное решение на судьбу. При этом каждая из историй по отдельности самамодостаточна и закончена.
Использование подобных приёмов безусловно требует опыта, однако именно они создают чудесный мир интерактивного произведения.",
                IsPublished = true,
                Views = 1,
            };
            if (!context.Articles.Any()) {
                context.Articles.AddOrUpdate(article);
            }
            
        }
    }
}
